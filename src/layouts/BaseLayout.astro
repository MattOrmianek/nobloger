---
import Header from "../components/Header/Header.astro";
import Footer from "../components/Footer/Footer.astro";
const { pageTitle } = Astro.props;

import "../styles/global.css";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.png" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle}</title>
    <script is:inline>
      function init() {
        preloadTheme();
        onScroll();
        animate();

        const backToTop = document.getElementById("back-to-top");
        backToTop?.addEventListener("click", (event) => scrollToTop(event));

        const backToPrev = document.getElementById("back-to-prev");
        backToPrev?.addEventListener("click", () => window.history.back());

        const lightThemeButton = document.getElementById("light-theme-button");
        lightThemeButton?.addEventListener("click", () => {
          localStorage.setItem("theme", "light");
          toggleTheme(false);
        });

        const darkThemeButton = document.getElementById("dark-theme-button");
        darkThemeButton?.addEventListener("click", () => {
          localStorage.setItem("theme", "dark");
          toggleTheme(true);
        });

        const systemThemeButton = document.getElementById(
          "system-theme-button",
        );
        systemThemeButton?.addEventListener("click", () => {
          localStorage.setItem("theme", "system");
          toggleTheme(
            window.matchMedia("(prefers-color-scheme: dark)").matches,
          );
        });

        window
          .matchMedia("(prefers-color-scheme: dark)")
          .addEventListener("change", (event) => {
            if (localStorage.theme === "system") {
              toggleTheme(event.matches);
            }
          });

        document.addEventListener("scroll", onScroll);
      }

      function animate() {
        const animateElements = document.querySelectorAll(".animate");

        animateElements.forEach((element, index) => {
          setTimeout(() => {
            element.classList.add("show");
          }, index * 150);
        });
      }

      function onScroll() {
        if (window.scrollY > 0) {
          document.documentElement.classList.add("scrolled");
        } else {
          document.documentElement.classList.remove("scrolled");
        }
      }

      function scrollToTop(event) {
        event.preventDefault();
        window.scrollTo({
          top: 0,
          behavior: "smooth",
        });
      }

      function toggleTheme(dark) {
        const css = document.createElement("style");

        css.appendChild(
          document.createTextNode(
            `* {
             -webkit-transition: none !important;
             -moz-transition: none !important;
             -o-transition: none !important;
             -ms-transition: none !important;
             transition: none !important;
          }
        `,
          ),
        );

        document.head.appendChild(css);

        if (dark) {
          document.documentElement.classList.add("dark");
        } else {
          document.documentElement.classList.remove("dark");
        }

        window.getComputedStyle(css).opacity;
        document.head.removeChild(css);
      }

      function preloadTheme() {
        const userTheme = localStorage.theme;

        if (userTheme === "light" || userTheme === "dark") {
          toggleTheme(userTheme === "dark");
        } else {
          toggleTheme(
            window.matchMedia("(prefers-color-scheme: dark)").matches,
          );
        }
      }

      document.addEventListener("DOMContentLoaded", () => init());
      document.addEventListener("astro:after-swap", () => init());
      preloadTheme();
    </script>
  </head>
  <body>
    <div class="flex flex-col mx-auto px-8 max-w-screen-md w-full min-h-screen">
      <Header />
      <div class="grow mt-32">
        <slot />
      </div>
      <Footer />
    </div>
  </body>
</html>
